# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        temp1=headA
        temp2=headB
        l1=0
        l2=0
        while temp1:
            l1+=1 
            temp1=temp1.next 
        while temp2:
            l2+=1 
            temp2=temp2.next 
        if l1>l2:
            diff=l1-l2
            for i in range(diff):
                headA=headA.next 
        if l1<=l2:
            diff=l2-l1 
            for i in range(diff):
                headB=headB.next 
        while headA and headB:
            if headA==headB:
                return headA
            headA=headA.next
            headB=headB.next
        return None
        

        
